#!bin/python
"""

"""
from __future__ import division
import sys, time, glob, logging
import gobject
import gtk
import numpy
from gtk.gtkgl.apputils import GLArea
from twisted.python.util import sibpath

sys.path.append("OpenCV-2.3.1/lib") # for cv2
sys.path.append("../webcam2") # for v4laccess

from gamescene import GameScene
from play import GameState
from vision import BlockSats, VideoPipeline, VideoControls

gobject.threads_init()

logging.basicConfig(level=logging.INFO)
log = logging.getLogger()

numpy.set_printoptions(precision=4, linewidth=200, suppress=True,
                       threshold=4000)

def logTime(func):
    def inner(*args, **kw):
        t1 = time.time()
        try:
            ret = func(*args, **kw)
        finally:
            log.info("Call to %s took %.1f ms" % (
                func.__name__, 1000 * (time.time() - t1)))
        return ret
    return inner

def addToolbar(wtree, label, cb):
    but1 = gtk.ToolButton(label=label)
    but1.connect("clicked", cb)
    but1.show()
    wtree.get_object("toolbar1").insert(but1, -1)

def swapInGlArea(wtree, widgetName, ga):
    oldGa = wtree.get_object(widgetName)
    ga.set_size_request(*oldGa.get_size_request())
    p = oldGa.get_parent()
    oldGa.destroy()
    p.add(ga)
    ga.show()

#pygame.init()
#beep = pygame.mixer.Sound("Question.wav")

state = GameState()

wtree = gtk.Builder()
wtree.add_from_file(sibpath(__file__, "ui.glade"))
mainwin = wtree.get_object("MainWindow")
mainwin.connect("destroy", gtk.main_quit)
mainwin.show_all()

addToolbar(wtree, "Force match", lambda tb: state.forceMatch())

bs = BlockSats(wtree.get_object("blockSats"))

gameScene = GameScene()
state.scene = gameScene
ga = GLArea(gameScene)
swapInGlArea(wtree, "gameArea", ga)

dev = glob.glob("/dev/video*")[0]
vp = VideoPipeline(dev, wtree.get_object("rawVideo"),
                   wtree.get_object("hueVideo"),
                   wtree.get_object("hueMatchVideo"),
                   wtree.get_object("blobBox"),
                   adjGet=lambda n: wtree.get_object(n).get_value(),
                   blockSats=bs,
                   onFrame=state.onFrame,
                   )
vc = VideoControls(dev, # could get this from the pipeline i presume
                   wtree.get_object("v4lControls"))

#gobject.timeout_add(1000 // framerate, self.updateLoop)
state.start()
gtk.main()
